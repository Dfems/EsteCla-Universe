import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Modal, ModalOverlay, ModalContent, ModalHeader, ModalCloseButton, ModalBody, ModalFooter, Button, Textarea, Image, FormControl, FormLabel, Input, Checkbox, VStack, } from '@chakra-ui/react';
const UploadModal = ({ isOpen, previewUrl, caption, onCaptionChange, onCancel, onConfirm, uploading, imageDateISO, onImageDateChange, sameAsPublish, onSameAsPublishChange, }) => {
    return (_jsxs(Modal, { isOpen: isOpen, onClose: onCancel, isCentered: true, children: [_jsx(ModalOverlay, {}), _jsxs(ModalContent, { children: [_jsx(ModalHeader, { children: "Nuovo post" }), _jsx(ModalCloseButton, {}), _jsx(ModalBody, { children: _jsxs(VStack, { align: "stretch", spacing: 3, children: [previewUrl ? (_jsx(Image, { src: previewUrl, alt: "preview", borderRadius: "md", maxH: "300px", objectFit: "cover", w: "100%" })) : null, _jsx(Textarea, { placeholder: "Scrivi una descrizione...", value: caption, onChange: (e) => onCaptionChange(e.target.value) }), _jsxs(FormControl, { children: [_jsx(FormLabel, { children: "Data dell'immagine" }), _jsx(Checkbox, { isChecked: sameAsPublish, onChange: (e) => onSameAsPublishChange(e.target.checked), mb: 2, children: "Uguale alla data di pubblicazione" }), _jsx(Input, { type: "date", value: imageDateISO, onChange: (e) => onImageDateChange(e.target.value), isDisabled: sameAsPublish })] })] }) }), _jsxs(ModalFooter, { children: [_jsx(Button, { variant: "ghost", mr: 3, onClick: onCancel, isDisabled: uploading, children: "Annulla" }), _jsx(Button, { colorScheme: "blue", onClick: onConfirm, isLoading: uploading, children: "Pubblica" })] })] })] }));
};
export default UploadModal;
