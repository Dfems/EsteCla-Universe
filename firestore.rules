rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Consenti lettura pubblica su QUALSIASI sottocollezione chiamata "posts"
    // Questo copre anche le query collectionGroup('posts') al di là della path
    match /{path=**}/posts/{postId} {
      allow read: if true;
    }

    // Public read for posts, write limited to owner
    match /users/{userId} {
  // Make user profiles publicly readable
  allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;

      // Subcollection posts
      match /posts/{postId} {
        allow read: if true; // posts are public to read
        // Scritture solo al proprietario e, in creazione/aggiornamento, obbligo di coerenza ownerUid
        allow create: if request.auth != null
          && request.auth.uid == userId
          && request.resource.data.ownerUid == request.auth.uid;
        allow update, delete: if request.auth != null && request.auth.uid == userId;
      }

      // Sottocollezioni followers/following
      // Documento id = uid dell'altro utente. Payload minimale: { uid: string, createdAt: int }
      match /followers/{followerUid} {
        allow read: if true; // visibile pubblicamente
  // Mirror gestito da Cloud Functions: blocca creazione/eliminazione dal client
  allow create: if false;
  allow delete: if false;
        allow update: if false; // nessun update parziale; add/remove only
      }
      match /following/{followingUid} {
        allow read: if true;
  // Solo il proprietario del profilo può modificare la propria following
        allow create, delete: if request.auth != null && request.auth.uid == userId;
        allow update: if false;
      }
    }
  }
}
